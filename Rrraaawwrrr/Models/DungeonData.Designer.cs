//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DungeonData", "HeroHeroAttributes", "Hero", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.Hero), "HeroAttributes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.HeroAttributes))]
[assembly: EdmRelationshipAttribute("DungeonData", "DungeonMapDungeonGridEvent", "DungeonMap", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.DungeonMap), "DungeonGridEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Rrraaawwrrr.Models.DungeonGridEvent))]
[assembly: EdmRelationshipAttribute("DungeonData", "DungeonGridEventEvent", "DungeonGridEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.DungeonGridEvent), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Rrraaawwrrr.Models.Event), true)]
[assembly: EdmRelationshipAttribute("DungeonData", "MonsterEventMonster", "MonsterEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.MonsterEvent), "Monster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Rrraaawwrrr.Models.Monster), true)]
[assembly: EdmRelationshipAttribute("DungeonData", "TreasureEventTreasure", "TreasureEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rrraaawwrrr.Models.TreasureEvent), "Treasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Rrraaawwrrr.Models.Treasure), true)]

#endregion

namespace Rrraaawwrrr.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DungeonDataContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DungeonDataContainer object using the connection string found in the 'DungeonDataContainer' section of the application configuration file.
        /// </summary>
        public DungeonDataContainer() : base("name=DungeonDataContainer", "DungeonDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DungeonDataContainer object.
        /// </summary>
        public DungeonDataContainer(string connectionString) : base(connectionString, "DungeonDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DungeonDataContainer object.
        /// </summary>
        public DungeonDataContainer(EntityConnection connection) : base(connection, "DungeonDataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hero> Heroes
        {
            get
            {
                if ((_Heroes == null))
                {
                    _Heroes = base.CreateObjectSet<Hero>("Heroes");
                }
                return _Heroes;
            }
        }
        private ObjectSet<Hero> _Heroes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeroAttributes> HeroAttributes
        {
            get
            {
                if ((_HeroAttributes == null))
                {
                    _HeroAttributes = base.CreateObjectSet<HeroAttributes>("HeroAttributes");
                }
                return _HeroAttributes;
            }
        }
        private ObjectSet<HeroAttributes> _HeroAttributes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DungeonMap> DungeonMaps
        {
            get
            {
                if ((_DungeonMaps == null))
                {
                    _DungeonMaps = base.CreateObjectSet<DungeonMap>("DungeonMaps");
                }
                return _DungeonMaps;
            }
        }
        private ObjectSet<DungeonMap> _DungeonMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DungeonGridEvent> DungeonGridEvents
        {
            get
            {
                if ((_DungeonGridEvents == null))
                {
                    _DungeonGridEvents = base.CreateObjectSet<DungeonGridEvent>("DungeonGridEvents");
                }
                return _DungeonGridEvents;
            }
        }
        private ObjectSet<DungeonGridEvent> _DungeonGridEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Monster> Monsters
        {
            get
            {
                if ((_Monsters == null))
                {
                    _Monsters = base.CreateObjectSet<Monster>("Monsters");
                }
                return _Monsters;
            }
        }
        private ObjectSet<Monster> _Monsters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Treasure> Treasures
        {
            get
            {
                if ((_Treasures == null))
                {
                    _Treasures = base.CreateObjectSet<Treasure>("Treasures");
                }
                return _Treasures;
            }
        }
        private ObjectSet<Treasure> _Treasures;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Heroes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeroes(Hero hero)
        {
            base.AddObject("Heroes", hero);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeroAttributes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeroAttributes(HeroAttributes heroAttributes)
        {
            base.AddObject("HeroAttributes", heroAttributes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DungeonMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDungeonMaps(DungeonMap dungeonMap)
        {
            base.AddObject("DungeonMaps", dungeonMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DungeonGridEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDungeonGridEvents(DungeonGridEvent dungeonGridEvent)
        {
            base.AddObject("DungeonGridEvents", dungeonGridEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Monsters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonsters(Monster monster)
        {
            base.AddObject("Monsters", monster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Treasures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreasures(Treasure treasure)
        {
            base.AddObject("Treasures", treasure);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="DungeonGridEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DungeonGridEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DungeonGridEvent object.
        /// </summary>
        /// <param name="dungeonGridEventId">Initial value of the DungeonGridEventId property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="dungeonMapGridId">Initial value of the DungeonMapGridId property.</param>
        public static DungeonGridEvent CreateDungeonGridEvent(global::System.Int32 dungeonGridEventId, global::System.String notes, global::System.Int64 dungeonMapGridId)
        {
            DungeonGridEvent dungeonGridEvent = new DungeonGridEvent();
            dungeonGridEvent.DungeonGridEventId = dungeonGridEventId;
            dungeonGridEvent.Notes = notes;
            dungeonGridEvent.DungeonMapGridId = dungeonMapGridId;
            return dungeonGridEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DungeonGridEventId
        {
            get
            {
                return _DungeonGridEventId;
            }
            set
            {
                if (_DungeonGridEventId != value)
                {
                    OnDungeonGridEventIdChanging(value);
                    ReportPropertyChanging("DungeonGridEventId");
                    _DungeonGridEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DungeonGridEventId");
                    OnDungeonGridEventIdChanged();
                }
            }
        }
        private global::System.Int32 _DungeonGridEventId;
        partial void OnDungeonGridEventIdChanging(global::System.Int32 value);
        partial void OnDungeonGridEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DungeonMapGridId
        {
            get
            {
                return _DungeonMapGridId;
            }
            set
            {
                OnDungeonMapGridIdChanging(value);
                ReportPropertyChanging("DungeonMapGridId");
                _DungeonMapGridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DungeonMapGridId");
                OnDungeonMapGridIdChanged();
            }
        }
        private global::System.Int64 _DungeonMapGridId;
        partial void OnDungeonMapGridIdChanging(global::System.Int64 value);
        partial void OnDungeonMapGridIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "DungeonMapDungeonGridEvent", "DungeonMap")]
        public DungeonMap DungeonMap
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonMap>("DungeonData.DungeonMapDungeonGridEvent", "DungeonMap").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonMap>("DungeonData.DungeonMapDungeonGridEvent", "DungeonMap").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DungeonMap> DungeonMapReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonMap>("DungeonData.DungeonMapDungeonGridEvent", "DungeonMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DungeonMap>("DungeonData.DungeonMapDungeonGridEvent", "DungeonMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "DungeonGridEventEvent", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("DungeonData.DungeonGridEventEvent", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("DungeonData.DungeonGridEventEvent", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="DungeonMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DungeonMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DungeonMap object.
        /// </summary>
        /// <param name="gridId">Initial value of the GridId property.</param>
        /// <param name="isDark">Initial value of the IsDark property.</param>
        /// <param name="isTrapped">Initial value of the IsTrapped property.</param>
        /// <param name="northGridId">Initial value of the NorthGridId property.</param>
        /// <param name="southGridId">Initial value of the SouthGridId property.</param>
        /// <param name="eastGridId">Initial value of the EastGridId property.</param>
        /// <param name="westGridId">Initial value of the WestGridId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        public static DungeonMap CreateDungeonMap(global::System.Int64 gridId, global::System.Boolean isDark, global::System.Boolean isTrapped, global::System.Int64 northGridId, global::System.Int64 southGridId, global::System.Int64 eastGridId, global::System.Int64 westGridId, global::System.Int32 x, global::System.Int32 y)
        {
            DungeonMap dungeonMap = new DungeonMap();
            dungeonMap.GridId = gridId;
            dungeonMap.IsDark = isDark;
            dungeonMap.IsTrapped = isTrapped;
            dungeonMap.NorthGridId = northGridId;
            dungeonMap.SouthGridId = southGridId;
            dungeonMap.EastGridId = eastGridId;
            dungeonMap.WestGridId = westGridId;
            dungeonMap.X = x;
            dungeonMap.Y = y;
            return dungeonMap;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GridId
        {
            get
            {
                return _GridId;
            }
            set
            {
                if (_GridId != value)
                {
                    OnGridIdChanging(value);
                    ReportPropertyChanging("GridId");
                    _GridId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GridId");
                    OnGridIdChanged();
                }
            }
        }
        private global::System.Int64 _GridId;
        partial void OnGridIdChanging(global::System.Int64 value);
        partial void OnGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDark
        {
            get
            {
                return _IsDark;
            }
            set
            {
                OnIsDarkChanging(value);
                ReportPropertyChanging("IsDark");
                _IsDark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDark");
                OnIsDarkChanged();
            }
        }
        private global::System.Boolean _IsDark;
        partial void OnIsDarkChanging(global::System.Boolean value);
        partial void OnIsDarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrapped
        {
            get
            {
                return _IsTrapped;
            }
            set
            {
                OnIsTrappedChanging(value);
                ReportPropertyChanging("IsTrapped");
                _IsTrapped = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTrapped");
                OnIsTrappedChanged();
            }
        }
        private global::System.Boolean _IsTrapped;
        partial void OnIsTrappedChanging(global::System.Boolean value);
        partial void OnIsTrappedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NorthGridId
        {
            get
            {
                return _NorthGridId;
            }
            set
            {
                OnNorthGridIdChanging(value);
                ReportPropertyChanging("NorthGridId");
                _NorthGridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NorthGridId");
                OnNorthGridIdChanged();
            }
        }
        private global::System.Int64 _NorthGridId;
        partial void OnNorthGridIdChanging(global::System.Int64 value);
        partial void OnNorthGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SouthGridId
        {
            get
            {
                return _SouthGridId;
            }
            set
            {
                OnSouthGridIdChanging(value);
                ReportPropertyChanging("SouthGridId");
                _SouthGridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SouthGridId");
                OnSouthGridIdChanged();
            }
        }
        private global::System.Int64 _SouthGridId;
        partial void OnSouthGridIdChanging(global::System.Int64 value);
        partial void OnSouthGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EastGridId
        {
            get
            {
                return _EastGridId;
            }
            set
            {
                OnEastGridIdChanging(value);
                ReportPropertyChanging("EastGridId");
                _EastGridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EastGridId");
                OnEastGridIdChanged();
            }
        }
        private global::System.Int64 _EastGridId;
        partial void OnEastGridIdChanging(global::System.Int64 value);
        partial void OnEastGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WestGridId
        {
            get
            {
                return _WestGridId;
            }
            set
            {
                OnWestGridIdChanging(value);
                ReportPropertyChanging("WestGridId");
                _WestGridId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WestGridId");
                OnWestGridIdChanged();
            }
        }
        private global::System.Int64 _WestGridId;
        partial void OnWestGridIdChanging(global::System.Int64 value);
        partial void OnWestGridIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NorthFeature
        {
            get
            {
                return _NorthFeature;
            }
            set
            {
                OnNorthFeatureChanging(value);
                ReportPropertyChanging("NorthFeature");
                _NorthFeature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NorthFeature");
                OnNorthFeatureChanged();
            }
        }
        private global::System.String _NorthFeature;
        partial void OnNorthFeatureChanging(global::System.String value);
        partial void OnNorthFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SouthFeature
        {
            get
            {
                return _SouthFeature;
            }
            set
            {
                OnSouthFeatureChanging(value);
                ReportPropertyChanging("SouthFeature");
                _SouthFeature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SouthFeature");
                OnSouthFeatureChanged();
            }
        }
        private global::System.String _SouthFeature;
        partial void OnSouthFeatureChanging(global::System.String value);
        partial void OnSouthFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EastFeature
        {
            get
            {
                return _EastFeature;
            }
            set
            {
                OnEastFeatureChanging(value);
                ReportPropertyChanging("EastFeature");
                _EastFeature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EastFeature");
                OnEastFeatureChanged();
            }
        }
        private global::System.String _EastFeature;
        partial void OnEastFeatureChanging(global::System.String value);
        partial void OnEastFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WestFeature
        {
            get
            {
                return _WestFeature;
            }
            set
            {
                OnWestFeatureChanging(value);
                ReportPropertyChanging("WestFeature");
                _WestFeature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WestFeature");
                OnWestFeatureChanged();
            }
        }
        private global::System.String _WestFeature;
        partial void OnWestFeatureChanging(global::System.String value);
        partial void OnWestFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Int32 _X;
        partial void OnXChanging(global::System.Int32 value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Int32 _Y;
        partial void OnYChanging(global::System.Int32 value);
        partial void OnYChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "DungeonMapDungeonGridEvent", "DungeonGridEvent")]
        public DungeonGridEvent DungeonGridEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonMapDungeonGridEvent", "DungeonGridEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonMapDungeonGridEvent", "DungeonGridEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DungeonGridEvent> DungeonGridEventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonMapDungeonGridEvent", "DungeonGridEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DungeonGridEvent>("DungeonData.DungeonMapDungeonGridEvent", "DungeonGridEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(MonsterEvent))]
    [KnownTypeAttribute(typeof(TreasureEvent))]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId">Initial value of the DungeonGridEventDungeonGridEventId property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId1">Initial value of the DungeonGridEventDungeonGridEventId1 property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.String eventName, global::System.Int32 dungeonGridEventDungeonGridEventId, global::System.Int32 dungeonGridEventDungeonGridEventId1)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.EventName = eventName;
            @event.DungeonGridEventDungeonGridEventId = dungeonGridEventDungeonGridEventId;
            @event.DungeonGridEventDungeonGridEventId1 = dungeonGridEventDungeonGridEventId1;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DungeonGridEventDungeonGridEventId
        {
            get
            {
                return _DungeonGridEventDungeonGridEventId;
            }
            set
            {
                OnDungeonGridEventDungeonGridEventIdChanging(value);
                ReportPropertyChanging("DungeonGridEventDungeonGridEventId");
                _DungeonGridEventDungeonGridEventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DungeonGridEventDungeonGridEventId");
                OnDungeonGridEventDungeonGridEventIdChanged();
            }
        }
        private global::System.Int32 _DungeonGridEventDungeonGridEventId;
        partial void OnDungeonGridEventDungeonGridEventIdChanging(global::System.Int32 value);
        partial void OnDungeonGridEventDungeonGridEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DungeonGridEventDungeonGridEventId1
        {
            get
            {
                return _DungeonGridEventDungeonGridEventId1;
            }
            set
            {
                OnDungeonGridEventDungeonGridEventId1Changing(value);
                ReportPropertyChanging("DungeonGridEventDungeonGridEventId1");
                _DungeonGridEventDungeonGridEventId1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DungeonGridEventDungeonGridEventId1");
                OnDungeonGridEventDungeonGridEventId1Changed();
            }
        }
        private global::System.Int32 _DungeonGridEventDungeonGridEventId1;
        partial void OnDungeonGridEventDungeonGridEventId1Changing(global::System.Int32 value);
        partial void OnDungeonGridEventDungeonGridEventId1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "DungeonGridEventEvent", "DungeonGridEvent")]
        public DungeonGridEvent DungeonGridEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonGridEventEvent", "DungeonGridEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonGridEventEvent", "DungeonGridEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DungeonGridEvent> DungeonGridEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DungeonGridEvent>("DungeonData.DungeonGridEventEvent", "DungeonGridEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DungeonGridEvent>("DungeonData.DungeonGridEventEvent", "DungeonGridEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="Hero")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hero : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hero object.
        /// </summary>
        /// <param name="heroId">Initial value of the HeroId property.</param>
        /// <param name="heroName">Initial value of the HeroName property.</param>
        /// <param name="class">Initial value of the Class property.</param>
        public static Hero CreateHero(global::System.Int32 heroId, global::System.String heroName, global::System.String @class)
        {
            Hero hero = new Hero();
            hero.HeroId = heroId;
            hero.HeroName = heroName;
            hero.Class = @class;
            return hero;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeroId
        {
            get
            {
                return _HeroId;
            }
            set
            {
                if (_HeroId != value)
                {
                    OnHeroIdChanging(value);
                    ReportPropertyChanging("HeroId");
                    _HeroId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HeroId");
                    OnHeroIdChanged();
                }
            }
        }
        private global::System.Int32 _HeroId;
        partial void OnHeroIdChanging(global::System.Int32 value);
        partial void OnHeroIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeroName
        {
            get
            {
                return _HeroName;
            }
            set
            {
                OnHeroNameChanging(value);
                ReportPropertyChanging("HeroName");
                _HeroName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeroName");
                OnHeroNameChanged();
            }
        }
        private global::System.String _HeroName;
        partial void OnHeroNameChanging(global::System.String value);
        partial void OnHeroNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private global::System.String _Class;
        partial void OnClassChanging(global::System.String value);
        partial void OnClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "HeroHeroAttributes", "HeroAttributes")]
        public HeroAttributes HeroAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeroAttributes>("DungeonData.HeroHeroAttributes", "HeroAttributes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeroAttributes>("DungeonData.HeroHeroAttributes", "HeroAttributes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HeroAttributes> HeroAttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeroAttributes>("DungeonData.HeroHeroAttributes", "HeroAttributes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HeroAttributes>("DungeonData.HeroHeroAttributes", "HeroAttributes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="HeroAttributes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeroAttributes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeroAttributes object.
        /// </summary>
        /// <param name="heroId">Initial value of the HeroId property.</param>
        /// <param name="life">Initial value of the Life property.</param>
        /// <param name="strength">Initial value of the Strength property.</param>
        /// <param name="agility">Initial value of the Agility property.</param>
        /// <param name="intelligence">Initial value of the Intelligence property.</param>
        /// <param name="wisdom">Initial value of the Wisdom property.</param>
        /// <param name="charm">Initial value of the Charm property.</param>
        public static HeroAttributes CreateHeroAttributes(global::System.Int32 heroId, global::System.Int32 life, global::System.Int32 strength, global::System.Int32 agility, global::System.Int32 intelligence, global::System.Int32 wisdom, global::System.Int32 charm)
        {
            HeroAttributes heroAttributes = new HeroAttributes();
            heroAttributes.HeroId = heroId;
            heroAttributes.Life = life;
            heroAttributes.Strength = strength;
            heroAttributes.Agility = agility;
            heroAttributes.Intelligence = intelligence;
            heroAttributes.Wisdom = wisdom;
            heroAttributes.Charm = charm;
            return heroAttributes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeroId
        {
            get
            {
                return _HeroId;
            }
            set
            {
                if (_HeroId != value)
                {
                    OnHeroIdChanging(value);
                    ReportPropertyChanging("HeroId");
                    _HeroId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HeroId");
                    OnHeroIdChanged();
                }
            }
        }
        private global::System.Int32 _HeroId;
        partial void OnHeroIdChanging(global::System.Int32 value);
        partial void OnHeroIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Life
        {
            get
            {
                return _Life;
            }
            set
            {
                OnLifeChanging(value);
                ReportPropertyChanging("Life");
                _Life = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Life");
                OnLifeChanged();
            }
        }
        private global::System.Int32 _Life;
        partial void OnLifeChanging(global::System.Int32 value);
        partial void OnLifeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Strength
        {
            get
            {
                return _Strength;
            }
            set
            {
                OnStrengthChanging(value);
                ReportPropertyChanging("Strength");
                _Strength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Strength");
                OnStrengthChanged();
            }
        }
        private global::System.Int32 _Strength;
        partial void OnStrengthChanging(global::System.Int32 value);
        partial void OnStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Agility
        {
            get
            {
                return _Agility;
            }
            set
            {
                OnAgilityChanging(value);
                ReportPropertyChanging("Agility");
                _Agility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Agility");
                OnAgilityChanged();
            }
        }
        private global::System.Int32 _Agility;
        partial void OnAgilityChanging(global::System.Int32 value);
        partial void OnAgilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Intelligence
        {
            get
            {
                return _Intelligence;
            }
            set
            {
                OnIntelligenceChanging(value);
                ReportPropertyChanging("Intelligence");
                _Intelligence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Intelligence");
                OnIntelligenceChanged();
            }
        }
        private global::System.Int32 _Intelligence;
        partial void OnIntelligenceChanging(global::System.Int32 value);
        partial void OnIntelligenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Wisdom
        {
            get
            {
                return _Wisdom;
            }
            set
            {
                OnWisdomChanging(value);
                ReportPropertyChanging("Wisdom");
                _Wisdom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wisdom");
                OnWisdomChanged();
            }
        }
        private global::System.Int32 _Wisdom;
        partial void OnWisdomChanging(global::System.Int32 value);
        partial void OnWisdomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Charm
        {
            get
            {
                return _Charm;
            }
            set
            {
                OnCharmChanging(value);
                ReportPropertyChanging("Charm");
                _Charm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Charm");
                OnCharmChanged();
            }
        }
        private global::System.Int32 _Charm;
        partial void OnCharmChanging(global::System.Int32 value);
        partial void OnCharmChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "HeroHeroAttributes", "Hero")]
        public Hero Hero
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hero>("DungeonData.HeroHeroAttributes", "Hero").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hero>("DungeonData.HeroHeroAttributes", "Hero").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hero> HeroReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hero>("DungeonData.HeroHeroAttributes", "Hero");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hero>("DungeonData.HeroHeroAttributes", "Hero", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="Monster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Monster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Monster object.
        /// </summary>
        /// <param name="monsterId">Initial value of the MonsterId property.</param>
        /// <param name="monsterName">Initial value of the MonsterName property.</param>
        /// <param name="attack">Initial value of the Attack property.</param>
        /// <param name="defense">Initial value of the Defense property.</param>
        /// <param name="alignment">Initial value of the Alignment property.</param>
        /// <param name="monsterEventEventId">Initial value of the MonsterEventEventId property.</param>
        public static Monster CreateMonster(global::System.Int32 monsterId, global::System.String monsterName, global::System.Int32 attack, global::System.Int32 defense, global::System.Int32 alignment, global::System.Int32 monsterEventEventId)
        {
            Monster monster = new Monster();
            monster.MonsterId = monsterId;
            monster.MonsterName = monsterName;
            monster.Attack = attack;
            monster.Defense = defense;
            monster.Alignment = alignment;
            monster.MonsterEventEventId = monsterEventEventId;
            return monster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonsterId
        {
            get
            {
                return _MonsterId;
            }
            set
            {
                if (_MonsterId != value)
                {
                    OnMonsterIdChanging(value);
                    ReportPropertyChanging("MonsterId");
                    _MonsterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MonsterId");
                    OnMonsterIdChanged();
                }
            }
        }
        private global::System.Int32 _MonsterId;
        partial void OnMonsterIdChanging(global::System.Int32 value);
        partial void OnMonsterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonsterName
        {
            get
            {
                return _MonsterName;
            }
            set
            {
                OnMonsterNameChanging(value);
                ReportPropertyChanging("MonsterName");
                _MonsterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MonsterName");
                OnMonsterNameChanged();
            }
        }
        private global::System.String _MonsterName;
        partial void OnMonsterNameChanging(global::System.String value);
        partial void OnMonsterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Attack
        {
            get
            {
                return _Attack;
            }
            set
            {
                OnAttackChanging(value);
                ReportPropertyChanging("Attack");
                _Attack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attack");
                OnAttackChanged();
            }
        }
        private global::System.Int32 _Attack;
        partial void OnAttackChanging(global::System.Int32 value);
        partial void OnAttackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Defense
        {
            get
            {
                return _Defense;
            }
            set
            {
                OnDefenseChanging(value);
                ReportPropertyChanging("Defense");
                _Defense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Defense");
                OnDefenseChanged();
            }
        }
        private global::System.Int32 _Defense;
        partial void OnDefenseChanging(global::System.Int32 value);
        partial void OnDefenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Alignment
        {
            get
            {
                return _Alignment;
            }
            set
            {
                OnAlignmentChanging(value);
                ReportPropertyChanging("Alignment");
                _Alignment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alignment");
                OnAlignmentChanged();
            }
        }
        private global::System.Int32 _Alignment;
        partial void OnAlignmentChanging(global::System.Int32 value);
        partial void OnAlignmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonsterEventEventId
        {
            get
            {
                return _MonsterEventEventId;
            }
            set
            {
                OnMonsterEventEventIdChanging(value);
                ReportPropertyChanging("MonsterEventEventId");
                _MonsterEventEventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonsterEventEventId");
                OnMonsterEventEventIdChanged();
            }
        }
        private global::System.Int32 _MonsterEventEventId;
        partial void OnMonsterEventEventIdChanging(global::System.Int32 value);
        partial void OnMonsterEventEventIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "MonsterEventMonster", "MonsterEvent")]
        public MonsterEvent MonsterEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonsterEvent>("DungeonData.MonsterEventMonster", "MonsterEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonsterEvent>("DungeonData.MonsterEventMonster", "MonsterEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MonsterEvent> MonsterEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonsterEvent>("DungeonData.MonsterEventMonster", "MonsterEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MonsterEvent>("DungeonData.MonsterEventMonster", "MonsterEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="MonsterEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonsterEvent : Event
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonsterEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId">Initial value of the DungeonGridEventDungeonGridEventId property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId1">Initial value of the DungeonGridEventDungeonGridEventId1 property.</param>
        public static MonsterEvent CreateMonsterEvent(global::System.Int32 eventId, global::System.String eventName, global::System.Int32 dungeonGridEventDungeonGridEventId, global::System.Int32 dungeonGridEventDungeonGridEventId1)
        {
            MonsterEvent monsterEvent = new MonsterEvent();
            monsterEvent.EventId = eventId;
            monsterEvent.EventName = eventName;
            monsterEvent.DungeonGridEventDungeonGridEventId = dungeonGridEventDungeonGridEventId;
            monsterEvent.DungeonGridEventDungeonGridEventId1 = dungeonGridEventDungeonGridEventId1;
            return monsterEvent;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "MonsterEventMonster", "Monster")]
        public EntityCollection<Monster> Monsters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Monster>("DungeonData.MonsterEventMonster", "Monster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Monster>("DungeonData.MonsterEventMonster", "Monster", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="Treasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Treasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Treasure object.
        /// </summary>
        /// <param name="treasureId">Initial value of the TreasureId property.</param>
        /// <param name="treasureName">Initial value of the TreasureName property.</param>
        /// <param name="treasureEventEventId">Initial value of the TreasureEventEventId property.</param>
        public static Treasure CreateTreasure(global::System.Int32 treasureId, global::System.String treasureName, global::System.Int32 treasureEventEventId)
        {
            Treasure treasure = new Treasure();
            treasure.TreasureId = treasureId;
            treasure.TreasureName = treasureName;
            treasure.TreasureEventEventId = treasureEventEventId;
            return treasure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreasureId
        {
            get
            {
                return _TreasureId;
            }
            set
            {
                if (_TreasureId != value)
                {
                    OnTreasureIdChanging(value);
                    ReportPropertyChanging("TreasureId");
                    _TreasureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TreasureId");
                    OnTreasureIdChanged();
                }
            }
        }
        private global::System.Int32 _TreasureId;
        partial void OnTreasureIdChanging(global::System.Int32 value);
        partial void OnTreasureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TreasureName
        {
            get
            {
                return _TreasureName;
            }
            set
            {
                OnTreasureNameChanging(value);
                ReportPropertyChanging("TreasureName");
                _TreasureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TreasureName");
                OnTreasureNameChanged();
            }
        }
        private global::System.String _TreasureName;
        partial void OnTreasureNameChanging(global::System.String value);
        partial void OnTreasureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreasureEventEventId
        {
            get
            {
                return _TreasureEventEventId;
            }
            set
            {
                OnTreasureEventEventIdChanging(value);
                ReportPropertyChanging("TreasureEventEventId");
                _TreasureEventEventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreasureEventEventId");
                OnTreasureEventEventIdChanged();
            }
        }
        private global::System.Int32 _TreasureEventEventId;
        partial void OnTreasureEventEventIdChanging(global::System.Int32 value);
        partial void OnTreasureEventEventIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "TreasureEventTreasure", "TreasureEvent")]
        public TreasureEvent TreasureEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreasureEvent>("DungeonData.TreasureEventTreasure", "TreasureEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreasureEvent>("DungeonData.TreasureEventTreasure", "TreasureEvent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreasureEvent> TreasureEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreasureEvent>("DungeonData.TreasureEventTreasure", "TreasureEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreasureEvent>("DungeonData.TreasureEventTreasure", "TreasureEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DungeonData", Name="TreasureEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreasureEvent : Event
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreasureEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId">Initial value of the DungeonGridEventDungeonGridEventId property.</param>
        /// <param name="dungeonGridEventDungeonGridEventId1">Initial value of the DungeonGridEventDungeonGridEventId1 property.</param>
        public static TreasureEvent CreateTreasureEvent(global::System.Int32 eventId, global::System.String eventName, global::System.Int32 dungeonGridEventDungeonGridEventId, global::System.Int32 dungeonGridEventDungeonGridEventId1)
        {
            TreasureEvent treasureEvent = new TreasureEvent();
            treasureEvent.EventId = eventId;
            treasureEvent.EventName = eventName;
            treasureEvent.DungeonGridEventDungeonGridEventId = dungeonGridEventDungeonGridEventId;
            treasureEvent.DungeonGridEventDungeonGridEventId1 = dungeonGridEventDungeonGridEventId1;
            return treasureEvent;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DungeonData", "TreasureEventTreasure", "Treasure")]
        public EntityCollection<Treasure> Treasures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treasure>("DungeonData.TreasureEventTreasure", "Treasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treasure>("DungeonData.TreasureEventTreasure", "Treasure", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
